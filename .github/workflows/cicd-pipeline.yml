name: Build & Deploy pipeline with turbo repo

on:
  push:
    branches: ["main"]

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository
        uses: actions/checkout@v3

      - name: Setup Node.js version 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: dependencies-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules
        with:
          path: ./node_modules/**
          key: ${{ runner.os }}-dependencies-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - if: ${{ steps.dependencies-cache.outputs.cache-hit != 'true' }}
        name: Reload the dependencies
        continue-on-error: true
        run: npm install

  build-app:
    needs: cache-dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository
        uses: actions/checkout@v3

      - name: Setup Node.js version 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: dependencies-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules
        with:
          path: ./node_modules/**
          key: ${{ runner.os }}-dependencies-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache build output
        id: build-cache
        uses: actions/cache@v3
        env:
          cache-name: turbo-cache
        with:
          path: ./node_modules/.cache/turbo/**
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('src/**') }}

      - name: Build
        run: npx turbo build:app

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prettify-and-uglify-app-build
          path: build/**

  build-json-prettify:
    needs: cache-dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository
        uses: actions/checkout@v3

      - name: Setup Node.js version 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: dependencies-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules
        with:
          path: ./node_modules/**
          key: ${{ runner.os }}-dependencies-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache build output
        id: build-cache
        uses: actions/cache@v3
        env:
          cache-name: turbo-cache
        with:
          path: ./node_modules/.cache/turbo/**
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('json-prettify/**') }}

      - name: Build
        run: npx turbo build:json-prettify

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prettify-and-uglify-json-prettify-build
          path: build/**

  build-json-uglify:
    needs: cache-dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository
        uses: actions/checkout@v3

      - name: Setup Node.js version 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: dependencies-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules
        with:
          path: ./node_modules/**
          key: ${{ runner.os }}-dependencies-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache build output
        id: build-cache
        uses: actions/cache@v3
        env:
          cache-name: turbo-cache
        with:
          path: ./node_modules/.cache/turbo/**
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('json-uglify/**') }}

      - name: Build
        run: npx turbo build:json-uglify

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prettify-and-uglify-json-uglify-build
          path: build/**

  deploy:
    needs: [build-app, build-json-prettify, build-json-uglify]
    runs-on: ubuntu-latest

    steps:
      - name: Check Repository
        uses: actions/checkout@v3

      - name: Download App Artifacts
        uses: actions/download-artifact@v3
        with:
          name: prettify-and-uglify-app-build
          path: build

      - name: Download JSON Prettify Artifacts
        uses: actions/download-artifact@v3
        with:
          name: prettify-and-uglify-json-prettify-build
          path: build

      - name: Download JSON Uglify Artifacts
        uses: actions/download-artifact@v3
        with:
          name: prettify-and-uglify-json-uglify-build
          path: build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: "./build"
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
